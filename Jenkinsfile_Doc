pipeline {
    agent any

    environment {
        // Define environment variables
        APP_NAME = "node-express-server-rest-api"
        DOCKER_IMAGE = "saikrupaelate/${APP_NAME}" // Replace with your Docker Hub username
        DOCKER_TAG = "latest"
        DEPLOY_DIR = "/var/www/${APP_NAME}"
        GITHUB_REPO = "https://github.com/saikrupaelate/CICD-NodeJS-RestAPI.git"
        BRANCH = "main"
    }

    stages {
        // Stage 1: Checkout code from GitHub
        stage('Checkout') {
            steps {
                echo "Checking out code from GitHub..."
                git branch: "${BRANCH}", url: "${GITHUB_REPO}"
            }
        }

        // Stage 3: Build Docker Image
        stage('Build Docker Image') {
            steps {
                echo "Building Docker image..."
                sh """
                    docker build -t ${DOCKER_IMAGE}:${DOCKER_TAG} .
                """
            }
        }

        // Stage 4: Push Docker Image to Docker Hub
        stage('Push Docker Image') {
            steps {
                echo "Pushing Docker image to Docker Hub..."
                withCredentials([usernamePassword(credentialsId: 'docker-hub-credentials', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                    sh """
                        echo "Logging in to Docker Hub..."
                        echo "\$DOCKER_PASSWORD" | docker login -u "\$DOCKER_USERNAME" --password-stdin
                        echo "Pushing Docker image..."
                        docker push ${DOCKER_IMAGE}:${DOCKER_TAG}
                    """
                }
            }
        }

        // Stage 5: Deploy Docker Container
        stage('Deploy Docker Container') {
            steps {
                echo "Deploying Docker container..."

                sh """
                    docker stop ${APP_NAME} || true
                    docker rm ${APP_NAME} || true
                    docker run -d --name ${APP_NAME} -p 3000:3000 ${DOCKER_IMAGE}:${DOCKER_TAG}
                """
                echo "Application deployed successfully!"
            }
        }
    }

    post {
        success {
            echo "Pipeline succeeded! Application is live."
        }
        failure {
            echo "Pipeline failed. Check the logs for errors."
        }
    }
}
